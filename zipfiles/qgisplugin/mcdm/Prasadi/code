# Reclassify tool
    def reclassify(self,infile,order): 
        driver = gdal.GetDriverByName('GTiff')
        renderer = infile.renderer()
        provider = infile.dataProvider()
        extent = infile.extent()
        stats = provider.bandStatistics(1, QgsRasterBandStats.All) 
        b= stats.maximumValue-stats.minimumValue
        q=b/5
        tf = tempfile.TemporaryDirectory()
        tfile = tf.name + "\\rules.txt"
        tfile2 = tf.name +"\\reclassify.tif"
        
        if order in ['From 1 to 5']:
            with open(tfile, 'w') as f:
                f.write('{0} thru {1} = 1\n'.format(  0,   q))
                f.write('{0} thru {1} = 2\n'.format(  q, 2*q))
                f.write('{0} thru {1} = 3\n'.format(2*q, 3*q))
                f.write('{0} thru {1} = 4\n'.format(3*q, 4*q))
                f.write('{0} thru {1} = 5\n'.format(4*q, 5*q))
        else:
            with open(tfile, 'w') as f:
                f.write('{0} thru {1} = 5\n'.format(  0,   q))
                f.write('{0} thru {1} = 4\n'.format(  q, 2*q))
                f.write('{0} thru {1} = 3\n'.format(2*q, 3*q))
                f.write('{0} thru {1} = 2\n'.format(3*q, 4*q))
                f.write('{0} thru {1} = 1\n'.format(4*q, 5*q))


        processing.run("grass7:r.reclass", {'input':infile,\
            'rules':tfile,\
            'txtrules':'',\
            'output':tfile2,\
            'GRASS_REGION_PARAMETER':infile.extent(),\
            'GRASS_REGION_CELLSIZE_PARAMETER':25,\
            'GRASS_RASTER_FORMAT_OPT':'','GRASS_RASTER_FORMAT_META':''})

        #processing.run("grass7:r.reclass", infile, None, tfile, infile.extent(), 0.0, tfile2)
        rlayer = self.iface.addRasterLayer(tfile2, "reclassify")
        return tfile2
